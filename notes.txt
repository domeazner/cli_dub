
Development

Building CLI Gem Checklist/ Planning


1.Plan GEM, imagine interface DONE

2. Start with project structure & scrape test – DONE

3. Start with entry point – run file should be working - DONE

4. force that to build the CLI interface - DONE

5. stub out the interface - IN PROG

6. start making things real - IN PROG

7. discover objects

8. Intense program


CLI for dubbed anime, initializing with most popular/new releases
user types in dub-list
shows dub list

 1-35 page results of most popular dubs

then ask what show you would like information on? BIO? STAR RATING? GENRE? or EXIT?


1. flow
2. classes
 2.1 class relationships

U starts app and is welcomed with greeting
Most recent releases Dubbed data is scrapped from web 
User is presented with selection
User is asked for selection of show based on above info and input
U chooses show interested

User able to drill down to find additional information such as BIO, score, episode numbers

User Can go back to previous menus to amend search

User Repeats selection or exit.

Classes Used:
CLI - responsible for interaction with User
User Class - Release date list and obj store for most recent releases Decending.
SCRAPPED Rating Class - Responsible for creating and storing objects based on STAR RATING
SCRAPPED Genre Class - Responsible for creating and storing Genre tags based on genre TAGS 
Scraper Class - Scraping for data from animeplanet

A show has a name
A show has a score
A show has a BIO
A show has a Genre
A show has a URL

def get_recent_dub_list
            #to be scraped
        @asc_date_list = ["Ghost in the Shell: SAC_2045", "Fruits Basket 2nd Season", "Ascendance of a Bookworm: Part II", "Tower of God"]
    end

    def list_recent_dubs
            # list letters, iterate over the array
        @asc_date_list.each_with_index { |alphabetical, index| 
        puts "#{index+1}. #{alphabetical}" }
    end
